syntax on

call plug#begin('~/.vim/plugged')


"""""""""""""""""""""""""""""""""
" VIM:
"""""""""""""""""""""""""""""""""
" wrap gitcommit file types at the appropriate length
filetype indent plugin on

" no cowbells
set noerrorbells

" don't make it look like there are line breaks where there aren't:
set nowrap

" encoding
set encoding=utf-8
set fileencoding=utf-8

" avoid tmp files in projects
set backupdir=~/.bak
set directory=~/.swp

" enable omnicomplete
set omnifunc=syntaxcomplete#Complete

" better windows navigating
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" remove tailing white space
command T %s/\s\+$//

" use spaces for all indentation
set expandtab
set shiftwidth=2
set softtabstop=2


"""""""""""""""""""""""""""""""""
" NERDTree:
"""""""""""""""""""""""""""""""""
" open when vim opens
"autocmd vimenter * NERDTree

" open when C-j
map <C-n> :NERDTreeToggle<CR>

" change arrows
let g:NERDTreeDirArrowExpandable = '৩'
let g:NERDTreeDirArrowCollapsible = '২'


"""""""""""""""""""""""""""""""""
" Airline:
"""""""""""""""""""""""""""""""""
" tabline enabled
let g:airline#extensions#tabline#enabled = 0

" use powerline fonts
let g:airline_powerline_fonts = 1

" show status line all the time
set laststatus=2


"""""""""""""""""""""""""""""""""
" ESlint:
"""""""""""""""""""""""""""""""""
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_loc_list_height = 5
let g:syntastic_auto_loc_list = 0
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 1
let g:syntastic_javascript_checkers = ['eslint']

let g:syntastic_error_symbol = 'ȩ'
let g:syntastic_style_error_symbol = 'ȿȩ'
let g:syntastic_warning_symbol = 'Ŵ'
let g:syntastic_style_warning_symbol = 'ȿŴ'

highlight link SyntasticErrorSign SignColumn
highlight link SyntasticWarningSign SignColumn
highlight link SyntasticStyleErrorSign SignColumn
highlight link SyntasticStyleWarningSign SignColumn

"""""""""""""""""""""""""""""""""
" YUNO:
"""""""""""""""""""""""""""""""""
" show dude when 10 modifications
let g:YUNOcommit_after = 10

"""""""""""""""""""""""""""""""""
" Plug:
"""""""""""""""""""""""""""""""""
" Ternjs: run `npm install` the first time
" .dotfiles/vim.symlink/plugged/tern_for_vim
Plug 'airblade/vim-gitgutter'
Plug 'chrisbra/csv.vim'
Plug 'chriskempson/base16-vim'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'easymotion/vim-easymotion'
Plug 'editorconfig/editorconfig-vim'
Plug 'edsono/vim-matchit'
Plug 'elzr/vim-json'
Plug 'ervandew/supertab'
Plug 'esneider/YUNOcommit.vim'
Plug 'garbas/vim-snipmate'
Plug 'ivalkeen/vim-ctrlp-tjump'
Plug 'jasoncodes/ctrlp-modified.vim'
Plug 'jlanzarotta/bufexplorer'
Plug 'marcweber/vim-addon-mw-utils'
Plug 'mattn/gist-vim'
Plug 'mattn/webapi-vim'
Plug 'mileszs/ack.vim'
Plug 'moll/vim-node'
Plug 'othree/yajs.vim'
Plug 'scrooloose/nerdcommenter'
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
Plug 'scrooloose/syntastic'
Plug 'sgur/ctrlp-extensions.vim'
Plug 'sjl/gundo.vim'
Plug 'suan/vim-instant-markdown'
Plug 'takac/vim-spotifysearch'
Plug 'ternjs/tern_for_vim'
Plug 'tomtom/tlib_vim'
Plug 'tpope/vim-abolish'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'vim-scripts/winresizer.vim'

" Add plugins to &runtimepath
call plug#end()

"""""""""""""""""""""""""""""""""
" Colorscheme
"""""""""""""""""""""""""""""""""
let base16colorspace=256
set background=dark
colorscheme base16-pop

